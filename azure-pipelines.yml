# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest

# strategy:
#   matrix:
#     Python39:
#       python.version: '3.9'
    # Python311:
    #   python.version: '3.11'

steps:
  # - task: UsePythonVersion@0
  #   inputs:
  #     versionSpec: '$(pythonVersion)'
  #   displayName: 'Use Python $(pythonVersion)'

  - script: |
      python -m venv antenv
      source antenv/bin/activate
      python -m pip install --upgrade pip
      pip install setup
      pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
    workingDirectory: $(projectRoot)
    displayName: "Install requirements"

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.SourcesDirectory)'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
      replaceExistingArchive: true
    displayName: 'Create deployment package'

  - publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
    displayName: 'Upload package'
    artifact: drop

  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'julia-test-service-conn-workflow-identity'
      appType: 'webAppLinux'
      WebAppName: 'ceb-pipelines-flask-webapp'
      packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
